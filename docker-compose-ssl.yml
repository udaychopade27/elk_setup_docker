version: '3.7'
services:
  elasticsearch:
    image: elasticsearch:7.9.2
    restart: always
    deploy:
      resources:
        limits:
          memory: 2048M
          cpus: '1'
    container_name: elasticsearch
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=Uday@123
      # - xpack.security.enabled=true
      # - xpack.security.http.ssl.enabled=true
      # - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certs/elasticsearch.key
      # - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certs/elasticsearch.crt
    # networks:
    #   - elastic
    volumes:
      - elk_esdata:/usr/share/elasticsearch/data
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:rw"
      - "./certs/:/usr/share/elasticsearch/config/certs:rw"

  kibana:
    image: kibana:7.9.2
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Uday@123
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/kibana/config/certs/elasticsearch.key
      - xpack.security.http.ssl.certificate=/usr/share/kibana/config/certs/elasticsearch.crt
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '0.5'
    restart: always
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    volumes:
      - kibana_data:/usr/share/kibana/data
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:rw
      - ./certs/:/usr/share/kibana/config/certs:ro
    # networks:
    #   - elastic

  logstash:
    image: logstash:7.9.2
    restart: always
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '1'
    container_name: logstash
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Uday@123
    entrypoint: [ "sh", "-c", "chmod 600 /usr/share/elasticsearch/config/certs/elasticsearch.key", "logstash -f /usr/share/logstash/pipeline/logstash.conf"]
    ports:
      - '5044:5044'
    depends_on:
      - elasticsearch
    # networks:
    #   - elastic
    entrypoint: [ "sh", "-c", "chmod 600 /usr/share/logstash/config/certs/elasticsearch.key"]
    volumes:
      - "./logstash_pipeline/:/usr/share/logstash/pipeline:rw"
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:rw"
      - "./certs:/usr/share/logstash/config/certs:rw"
  
  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.9.2
  #   container_name: filebeat
  #   restart: always
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=elastic
  #     - ELASTICSEARCH_PASSWORD=Uday@123
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.5'
  #   user: root
  #   networks:
  #     - elastic
  #   volumes:
  #     - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
  #     - "/var/log/:/var/log:ro"
  #     - "./certs:/usr/share/logstash/config/certs:rw"
  #   depends_on:
  #     - elasticsearch

  metricbeat:  
    image: docker.elastic.co/beats/metricbeat:7.9.2
    container_name: metricbeat
    restart: always
    # environment:
    #   - setup.kibana.host="https://kibana:5601"
    #   - output.elasticsearch.hosts=["https://elasticsearch:9200"]
    #   - ELASTICSEARCH_USERNAME=elastic
    #   - ELASTICSEARCH_PASSWORD=Uday@123
    entrypoint: ["sh", "-c", "sleep 240 && ./metricbeat setup && ./metricbeat -e"]
    user: root
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    # networks:
    #   - elastic
    depends_on:
      - elasticsearch
      - kibana
    volumes:
      - "./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:rw"
      - "./metricbeat/modules.d/:/usr/share/metricbeat/modules.d/:rw"
      - "./certs:/usr/share/metricbeat/config/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
      - "/proc:/hostfs/proc:ro"
      - "/:/hostfs:ro"

  auditbeat:
    image: docker.elastic.co/beats/auditbeat:7.9.2
    # build:
    #   context: ./auditbeat
    #   dockerfile: Dockerfile
    container_name: auditbeat
    user: root
    privileged: true
    pid: host
    cap_add:
      - AUDIT_CONTROL
      - AUDIT_READ
      - CAP_SYS_ADMIN # This is an insecure option for getting access to /sys and bind mount tracefs debugfs
      - CAP_NET_ADMIN  
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.5'
    volumes:
      - "./auditbeat/auditbeat.yml:/usr/share/auditbeat/auditbeat.yml"  # Custom config file
      - "./certs/:/usr/share/auditbeat/config/certs/"
      - "/var/log:/var/log:ro"                                   # Access to system logs
      - "/etc:/host/etc:ro"                                        # Monitor system configuration files
      - "/usr/bin:/usr/bin:ro"                                 # Monitor binary files
      - "/usr/sbin:/usr/sbin:ro"
      - "/proc:/hostfs/proc:ro"                                 # Required for process monitoring
      - "/var/run/docker.sock:/var/run/docker.sock:ro" 
      - /sys/kernel/tracing:/sys/kernel/tracing:ro  # Mount tracefs (readonly)
      - /sys/kernel/debug:/sys/kernel/debug:ro      # Mount debugfs (readonly)
    entrypoint: ["/bin/sh", "-c", "sleep 240 && chmod 600 /usr/share/auditbeat/auditbeat.yml && auditbeat setup && auditbeat -e"]
      
  #   # depends_on:
  #   #   - elasticsearch
  #   #   - kibana

   
  
      
    

networks:
  elastic:

volumes:
  elk_esdata:
    driver: local
  kibana_data:



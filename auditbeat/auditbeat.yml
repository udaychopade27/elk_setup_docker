###################### Auditbeat Configuration ##########################

# ======================== File Integrity Module =========================
auditbeat.modules:

- module: auditd
  # Load audit rules from separate files. Same format as audit.rules(7).
  audit_rule_files: [ '${path.config}/audit.rules.d/*.conf' ]
  audit_rules: |
    ## Define audit rules here.
    ## Create file watches (-w) or syscall audits (-a or -A). Uncomment these
    ## examples or add your own rules.

    ## If you are on a 64 bit platform, everything should be running
    ## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
    ## because this might be a sign of someone exploiting a hole in the 32
    ## bit API.
    #-a always,exit -F arch=b32 -S all -F key=32bit-abi

    ## Executions.
    #-a always,exit -F arch=b64 -S execve,execveat -k exec

    ## External access (warning: these can be expensive to audit).
    #-a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access

    ## Identity changes.
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/elasticsearch/elasticsearch.yml -p wa -k elk_changes
    -w /etc/kibana/kibana.yml -p wa -k elk_changes

    ## Unauthorized access attempts.
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /sbin
  - /usr/sbin
  - /etc
  - /etc/elasticsearch
  - /etc/kibana

  exclude_files:
  - '([^\s]+).reference.yml'

- module: system
  datasets:
    - package # Installed, updated, and removed packages

  period: 2m # The frequency at which the datasets check for changes

- module: system
  datasets:
    - host    # General host information, e.g. uptime, IPs
    - login   # User logins, logouts, and system boots.
    - process # Started and stopped processes
      #    - socket  # Opened and closed sockets
    - user    # User information

  # How often datasets send state updates with the
  # current state of the system (e.g. all currently
  # running processes, all open sockets).
  state.period: 12h

  # Enabled by default. Auditbeat will read password fields in
  # /etc/passwd and /etc/shadow and store a hash locally to
  # detect any changes.
  user.detect_password_changes: true

  # File patterns of the login record files.
  login.wtmp_file_pattern: /var/log/wtmp*
  login.btmp_file_pattern: /var/log/btmp*


# auditbeat.modules:

# - module: auditd
#   audit_rules: |
#     -w /etc/passwd -p wa -k identity
#     -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access
#     -w /etc/group -p wa -k identity
#     -w /etc/gshadow -p wa -k identity
#     -a always,exit -F arch=b32 -S all -F key=32bit-abi

#     ## Executions.
#     -a always,exit -F arch=b64 -S execve,execveat -k exec

#     ## External access (warning: these can be expensive to audit).
#     -a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access
#     ## Unauthorized access attempts.
#     -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
#     -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access
# - module: file_integrity
#   paths:
#     - /bin
#     - /usr/bin
#     - /sbin
#     - /usr/sbin
#     - /etc
# processors:
# - add_cloud_metadata: ~

# - module: system
#   datasets:
#     - package # Installed, updated, and removed packages

#   period: 2m # The frequency at which the datasets check for changes

# # - module: system
# #   datasets:
# #     - host    # General host information, e.g. uptime, IPs
# #     - login   # User logins, logouts, and system boots.
# #     - process # Started and stopped processes
# #     - socket  # Opened and closed sockets
# #     - user    # User information

# #   # How often datasets send state updates with the
# #   # current state of the system (e.g. all currently
# #   # running processes, all open sockets).
# #   state.period: 12h

# #   # Enabled by default. Auditbeat will read password fields in
# #   # /etc/passwd and /etc/shadow and store a hash locally to
# #   # detect any changes.
# #   user.detect_password_changes: true

# #   # File patterns of the login record files.
# #   login.wtmp_file_pattern: /var/log/wtmp*
# #   login.btmp_file_pattern: /var/log/btmp*
# - module: system
#   datasets:
#     - host
#     - login
#     - package
#     - user
#   period: 1m

#   user.detect_password_changes: true

# - module: system
#   datasets:
#     - process
#     - socket
#   period: 1s
# auditbeat.modules:

# - module: file_integrity
#   paths:
#     - /bin
#     - /usr/bin
#     - /sbin
#     - /usr/sbin
#     - /etc
#   exclude_files:
#     - '(?i)\.sw[nop]$'
#     - '~$'
#     - '/\.git($|/)'
#   scan_at_start: true
#   recursive: true

# # ======================== Auditd Module =============================
# - module: auditd
#   resolve_ids: true
#   failure_mode: silent
#   backlog_limit: 8192
#   rate_limit: 0
#   audit_rules: |
#     ## Collect file access logs.
#     -w /etc/passwd -p wa -k identity
#     -w /etc/shadow -p wa -k identity
#     -w /etc/group -p wa -k identity
#     -w /etc/gshadow -p wa -k identity

#     ## Monitor privileged commands.
#     -a always,exit -F arch=b64 -S execve -C uid!=euid -F key=privileged
# - module: system
#   datasets:
#           - host
#           - login
#           - package
#           - process
#             #  - socket
#           - user
# ======================= General Config ================================
# Setup the output destination.
output.elasticsearch:
  hosts: ["https://elasticsearch:9200"]
  username: "elastic"          # Optional: Add if authentication is enabled
  password: "Uday@123"
  ssl.verification_mode: "full"
  ssl.certificate_authorities: ["/usr/share/auditbeat/config/certs/elasticsearch.crt"]

# Optional: Send data to Logstash first
#output.logstash:
#  hosts: ["localhost:5044"]

# ======================= Kibana ===============================
setup.kibana:
  host: "https://kibana:5601"
  username: "elastic"          # Optional
  password: "Uday@123"
  ssl.verification_mode: "full"
  ssl.certificate_authorities: ["/usr/share/auditbeat/config/certs/kibana.crt"]

# ====================== Logging ==============================
# logging.level: info
# logging.to_files: true
# logging.files:
#   path: /var/log/auditbeat
#   name: auditbeat.log
#   keepfiles: 7
#   permissions: 0644

# ====================== Setup Dashboards ======================
setup.dashboards.enabled: true
# setup.ilm.overwrite: true


# # # ===================== Data Index Life Cycle ====================
# # Automatically delete older indices.
# setup.ilm.enabled: true
# setup.ilm.rollover_alias: "auditbeat"
# setup.ilm.pattern: "{now/d}-000001"

# ====================== Monitoring ============================
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["https://elasticsearch:9200"]
  username: "elastic"
  password: "Uday@123"
  ssl.certificate_authorities: ["/usr/share/auditbeat/config/certs/elasticsearch.crt"]
# ====================== Processors ============================
processors:
  - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
